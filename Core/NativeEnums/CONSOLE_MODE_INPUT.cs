namespace Ax.Engine.Core
{
    public static partial class Native
    {
        /// <summary>
        ///  Define flags to change the input mode of the console;
        /// </summary>
        public enum CONSOLE_MODE_INPUT : uint
        {
            /// TODO : ReadFile

            /// <summary>
            ///  Characters read by the <see cref="ReadFile"/> or <see cref="ReadConsole(System.IntPtr, System.Text.StringBuilder, uint, out uint, System.IntPtr)"/> function are written to the active screen buffer as they are read. This mode can be used only if the <see cref="CONSOLE_MODE_INPUT.ENABLE_LINE_INPUT"/> mode is also enabled.
            /// </summary>
            ENABLE_ECHO_INPUT = 0x0004,

            /// <summary>
            ///  When enabled, text entered in a console window will be inserted at the current cursor location and all text following that location will not be overwritten. When disabled, all following text will be overwritten.
            /// </summary>
            ENABLE_INSERT_MODE = 0x0020,

            /// <summary>
            ///  The <see cref="ReadFile"/> or <see cref="ReadConsole(System.IntPtr, System.Text.StringBuilder, uint, out uint, System.IntPtr)"/>  function returns only when a carriage return character is read. If this mode is disabled, the functions return when one or more characters are available.
            /// </summary>
            ENABLE_LINE_INPUT = 0x0002,

            /// <summary>
            /// If the mouse pointer is within the borders of the console window and the window has the keyboard focus, mouse events generated by mouse movement and button presses are placed in the input buffer. These events are discarded by <see cref="ReadFile"/> or <see cref="ReadConsole(System.IntPtr, System.Text.StringBuilder, uint, out uint, System.IntPtr)"/>, even when this mode is enabled.
            /// </summary>
            ENABLE_MOUSE_INPUT = 0x0010,

            /// <summary>
            ///  CTRL+C is processed by the system and is not placed in the input buffer. If the input buffer is being read by <see cref="ReadFile"/> or <see cref="ReadConsole(System.IntPtr, System.Text.StringBuilder, uint, out uint, System.IntPtr)"/>, other control keys are processed by the system and are not returned in the ReadFile or ReadConsole buffer. If the <see cref="CONSOLE_MODE_INPUT.ENABLE_LINE_INPUT"/> mode is also enabled, backspace, carriage return, and line feed characters are handled by the system.
            /// </summary>
            ENABLE_PROCESSED_INPUT = 0x0001,

            /// <summary>
            ///  This flag enables the user to use the mouse to select and edit text.
            /// </summary>
            ENABLE_QUICK_EDIT_MODE = 0x0040,

            /// <summary>
            ///  User interactions that change the size of the console screen buffer are reported in the console's input buffer. Information about these events can be read from the input buffer by applications using the <see cref="ReadConsoleInput(System.IntPtr, INPUT_RECORD[], uint, out uint)"/> function, but not by those using <see cref="ReadFile"/> or <see cref="ReadConsole(System.IntPtr, System.Text.StringBuilder, uint, out uint, System.IntPtr)"/> .
            /// </summary>
            ENABLE_WINDOW_INPUT = 0x0008,

            /// TODO : verify write console
            /// TODO : missing flags

            /// <summary>
            ///  Setting this flag directs the Virtual Terminal processing engine to convert user input received by the console window into Console Virtual Terminal Sequences that can be retrieved by a supporting application through <see cref="WriteFile"/> or <see cref="WriteConsole(System.IntPtr, byte[], int, out int, System.IntPtr)"/> functions.
            /// </summary>
            ENABLE_VIRTUAL_TERMINAL_INPUT = 0x0200,

            ENABLE_EXTENDED_FLAGS = 0x80,
            ENABLE_AUTO_POSITION = 0x100,
        }
    }
}